geom_smooth(se = F) +
scale_color_manual(values = cols) +
thm +
labs(
y = 'Species richness estimate',
x = 'Sampling distance every x meters',
size = 'Variance with random subsample',
color = NULL
)
p2 <- ggplot(toplo1, aes(x = sampint, y = per, group = sample, color = sample)) +
geom_point(alpha = 0.6, aes(size = spprchvar)) +
scale_x_continuous() +
facet_wrap(~site) +
geom_smooth(se = F) +
scale_color_manual(values = cols) +
thm +
labs(
y = 'Species richness estimate, % loss',
x = 'Sampling distance every x meters',
size = 'Variance with random subsample',
color = NULL
)
tmp <- rchests %>%
mutate(
sample = factor(sample, levels = c('1', '2'), labels = c('Baseline', '2018'))
) %>%
group_by(site, sample) %>%
mutate(
per = 100 * (spprch - max(spprch)) / max(spprch)
) %>%
nest() %>%
mutate(
lofit = purrr::map(data, function(x){
prddat <- x %>%
select(sampint) %>%
unique
spprchloess <- loess(spprch ~ sampint, x) %>%
predict(newdat = prddat)
perloess <- loess(per ~ sampint, x) %>%
predict(newdata = prddat)
meanrich <- x %>%
filter(sampint == 0.5) %>%
pull(spprch) %>%
mean()
out <- tibble(
meanrich = meanrich,
sampint = prddat$sampint,
spprchloess = spprchloess,
perloess = perloess
)
return(out)
})
) %>%
select(-data) %>%
unnest('lofit') %>%
group_by(site, sample, meanrich) %>%
summarise(
difv = min(perloess) - max(perloess),
.groups = 'drop'
)
mod <- lm(difv ~ meanrich, data = tmp) %>%
summary() %>%
.$coefficients %>%
.[2, 4] %>%
round(., 2)
p3 <- ggplot(tmp, aes(x = meanrich, y = difv)) +
geom_point() +
stat_smooth(method = 'lm') +
thm +
labs(
x = 'Actual species richness',
y = 'Total percent loss from 0.5 m to 10 m sampling',
subtitle = 'Total species loss with reduced sampling as a function of actual richness',
caption = paste('Model insignificant, p = ', mod)
)
jpeg(here('figs/richex.jpg'), height = 7, width = 8, family = fml, units = 'in', res = 400)
print(p1)
dev.off()
jpeg(here('figs/richperex.jpg'), height = 7, width = 8, family = fml, units = 'in', res = 400)
print(p2)
dev.off()
jpeg(here('figs/richloss.jpg'), height = 6, width = 6.5, family = fml, units = 'in', res = 400)
print(p3)
dev.off()
foests <- downsmps %>%
mutate(
foest = map(downsmp, function(downsmp){
downsmp %>%
filter(!species %in% rmv) %>%
select(meter, species, pcent_basal_cover) %>%
mutate(
pa = ifelse(pcent_basal_cover > 0, 1, 0)
) %>%
select(-pcent_basal_cover) %>%
mutate(cnt = length(unique(meter))) %>%
unique %>%
group_by(species) %>%
summarise(
foest = sum(pa) / unique(cnt)
)
})
) %>%
select(-downsmp) %>%
unnest('foest') %>%
group_by(site, sample, sampint, species) %>%
summarise(
foestvar = var(foest),
foest = mean(foest),
.groups = 'drop'
)
toplo <- foests %>%
mutate(
sample = factor(sample, levels = c('1', '2'), labels = c('Baseline', '2018'))
) %>%
unite('samplespecies', sample, species, remove = F)
# filter(species == 'Avicennia germinans')
cols <- c('#958984', '#00806E')
thm <- theme_ipsum(base_family = fml) +
theme(
panel.grid.minor = element_blank(),
# panel.grid.major.x = element_blank(),
axis.title.x = element_text(hjust = 0.5, size = 12),
axis.title.y = element_text(hjust = 0.5, size = 12),
legend.position = 'top'
)
p1 <- ggplot(toplo, aes(x = sampint, y = foest, group = samplespecies, color = sample)) +
geom_point(alpha = 0.6, aes(size = foestvar)) +
scale_x_continuous() +
facet_wrap(~site) +
geom_line() +
scale_color_manual(values = cols) +
thm +
labs(
y = 'Species richness estimate',
x = 'Sampling distance every x meters',
size = 'Variance across random subsamples',
color = NULL
)
tmp1 <- toplo %>%
filter(sampint == 0.5) %>%
select(-sampint, -foestvar)
tmp2 <- toplo %>%
filter(sampint == 10) %>%
select(-sampint, -foest)
tmp <- inner_join(tmp1, tmp2, by = c('site', 'samplespecies', 'sample', 'species')) %>%
na.omit()
mod <- lm(log10(1 + foestvar) ~ log10(1 + foest), data = tmp) %>%
summary() %>%
.$coefficients %>%
.[2, 4] %>%
format.pval(., eps = 0.05)
p2 <- ggplot(tmp, aes(x = foest, y = foestvar)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
geom_smooth(method = 'lm') +
thm +
labs(
x = 'Initial frequency occurrence',
y = 'Final variance at 10 m sampling',
subtitle = 'Variance of frequency occurrence with reduced effort',
caption = paste('Model significant, p ', mod)
)
jpeg(here('figs/foex.jpg'), height = 7, width = 8, family = fml, units = 'in', res = 400)
print(p1)
dev.off()
jpeg(here('figs/fovarex.jpg'), height = 6, width = 6.5, family = fml, units = 'in', res = 400)
print(p2)
dev.off()
library(tidyverse)
library(purrr)
library(here)
library(grid)
library(flextable)
# downsampled vegetation surveys
data(downsmps)
# to remove from analysis
rmv <- c("Unknown", "Woody Debris, none/detritus")
# richness table ------------------------------------------------------------------------------
rchests <- downsmps %>%
mutate(
spprch = map(downsmp, function(downsmp){
downsmp %>%
filter(!species %in% rmv) %>%
pull(species) %>%
unique %>%
length
})
) %>%
select(-downsmp) %>%
unnest('spprch') %>%
group_by(site, sample, sampint) %>%
summarise(
spprchvar = var(spprch),
spprch = mean(spprch),
.groups = 'drop'
)
rchestssum <- rchests %>%
mutate(
sample = factor(sample, levels = c('1', '2'), labels = c('Baseline', '2018'))
) %>%
group_by(site, sample) %>%
mutate(
per = 100 * (spprch - max(spprch)) / max(spprch)
) %>%
group_by(site) %>%
nest() %>%
mutate(
lofit = purrr::map(data, function(x){
prddat <- x %>%
select(sampint) %>%
unique
spprchloess <- loess(spprch ~ sampint, x) %>%
predict(newdat = prddat)
perloess <- loess(per ~ sampint, x) %>%
predict(newdata = prddat)
meanrich <- x %>%
group_by(sample) %>%
filter(sampint == 0.5) %>%
pull(spprch) %>%
mean()
out <- tibble(
meanrich = meanrich,
sampint = prddat$sampint,
spprchloess = spprchloess,
perloess = perloess
)
return(out)
})
)
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
)
richtab <- totab %>%
as_grouped_data('Site') %>%
flextable() %>%
fontsize(size = 8, part = 'body', j = 3:ncol_keys(.)) %>%
add_header_row(values = c('', 'Sample interval every x meters'), colwidths = c(2, 11)) %>%
theme_booktabs() %>%
padding(padding = 0, part = 'all') %>%
width(width = 1, j = 1) %>%
width(width = 5.5 / (ncol_keys(.) - 1), j = 2:ncol_keys(.))
richtab
richtab <- totab %>%
as_grouped_data('Site') %>%
flextable() %>%
fontsize(size = 8, part = 'body', j = 1:ncol_keys(.)) %>%
add_header_row(values = c('', 'Sample interval every x meters'), colwidths = c(2, 11)) %>%
theme_booktabs() %>%
padding(padding = 0, part = 'all') %>%
width(width = 1, j = 1) %>%
width(width = 5.5 / (ncol_keys(.) - 1), j = 2:ncol_keys(.))
richtab
richtab <- totab %>%
as_grouped_data('Site') %>%
flextable() %>%
fontsize(size = 8, part = 'all', j = 1:ncol_keys(.)) %>%
add_header_row(values = c('', 'Sample interval every x meters'), colwidths = c(2, 11)) %>%
theme_booktabs() %>%
padding(padding = 0, part = 'all') %>%
width(width = 1, j = 1) %>%
width(width = 5.5 / (ncol_keys(.) - 1), j = 2:ncol_keys(.))
richtab
save(richtab, file = here('data/richtab.RData'))
totab
toplo1
rcheststum
rchestssum
rchestssum <- rchests %>%
mutate(
sample = factor(sample, levels = c('1', '2'), labels = c('Baseline', '2018'))
) %>%
group_by(site, sample) %>%
mutate(
per = 100 * (spprch - max(spprch)) / max(spprch)
) %>%
ungroup()
rchestssum
toplo1
identical(rchestssum, toplo1)
head(toplo1)
head(richestssum)
head(rchestssum)
identical(rchestssum, ungruop(toplo1))
identical(rchestssum, ungroup(toplo1))
dim(toplo1)
dim(rhcestssum)
dim(rchestssum)
plot(toplo1$per, rchestsum$per)
plot(toplo1$per, rchestssum$per)
# get factor levels based on greatest reduction
levs <- rchestssum %>%
group_by(site) %>%
summarise(
difv = max(perloess) - min(perloess),
.groups = 'drop'
) %>%
arrange(difv) %>%
pull(site) %>%
rev
rchestssum <- rchests %>%
mutate(
sample = factor(sample, levels = c('1', '2'), labels = c('Baseline', '2018'))
) %>%
group_by(site, sample) %>%
mutate(
per = 100 * (spprch - max(spprch)) / max(spprch)
) %>%
group_by(site) %>%
nest() %>%
mutate(
lofit = purrr::map(data, function(x){
prddat <- x %>%
select(sampint) %>%
unique
spprchloess <- loess(spprch ~ sampint, x) %>%
predict(newdat = prddat)
perloess <- loess(per ~ sampint, x) %>%
predict(newdata = prddat)
meanrich <- x %>%
group_by(sample) %>%
filter(sampint == 0.5) %>%
pull(spprch) %>%
mean()
out <- tibble(
meanrich = meanrich,
sampint = prddat$sampint,
spprchloess = spprchloess,
perloess = perloess
)
return(out)
})
)
# get factor levels based on greatest reduction
levs <- rchestssum %>%
group_by(site) %>%
summarise(
difv = max(perloess) - min(perloess),
.groups = 'drop'
) %>%
arrange(difv) %>%
pull(site) %>%
rev
# get factor levels based on greatest reduction
levs <- rchestssum %>%
select(-data) %>%
unnest('lofit') %>%
group_by(site) %>%
summarise(
difv = max(perloess) - min(perloess),
.groups = 'drop'
) %>%
arrange(difv) %>%
pull(site) %>%
rev
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample),
site = mutate(site, levels = levs)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
)
levs
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample),
site = factor(site, levels = levs)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
)
richtab <- totab %>%
as_grouped_data('Site') %>%
flextable() %>%
fontsize(size = 8, part = 'all', j = 1:ncol_keys(.)) %>%
add_header_row(values = c('', 'Sample interval every x meters'), colwidths = c(2, 11)) %>%
theme_booktabs() %>%
padding(padding = 0, part = 'all') %>%
width(width = 1, j = 1) %>%
width(width = 5.5 / (ncol_keys(.) - 1), j = 2:ncol_keys(.))
save(richtab, file = here('data/richtab.RData'))
richtab
totab
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample),
site = factor(site, levels = levs)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
) %>%
arrange(Site, Year)
totab
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample),
site = factor(site, levels = levs)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
) %>%
arrange(Site, -Year)
totab
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample),
site = factor(site, levels = levs)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
) %>%
arrange(Site, desc(Year))
tota
totab
save(richtab, file = here('data/richtab.RData'))
richtat
richtab
totab <- rchestssum %>%
select(-lofit) %>%
unnest('data') %>%
select(-spprchvar) %>%
mutate(
per = paste0(' (', abs(round(per, 0)), ')'),
spprch = round(spprch, 1),
per = ifelse(sampint == 0.5, '', per),
sample = gsub('Year ', '', sample),
site = factor(site, levels = levs)
) %>%
filter(sampint %in% c(0.5, 1:10)) %>%
unite('spprch', spprch, per, sep = '') %>%
pivot_wider(names_from = sampint, values_from = spprch) %>%
rename(
Site = site,
Year = sample,
) %>%
arrange(Site, desc(Year))
richtab <- totab %>%
as_grouped_data('Site') %>%
flextable() %>%
fontsize(size = 8, part = 'all', j = 1:ncol_keys(.)) %>%
add_header_row(values = c('', 'Sample interval every x meters'), colwidths = c(2, 11)) %>%
theme_booktabs() %>%
padding(padding = 0, part = 'all') %>%
width(width = 1, j = 1) %>%
width(width = 5.5 / (ncol_keys(.) - 1), j = 2:ncol_keys(.))
save(richtab, file = here('data/richtab.RData'))
richtab
